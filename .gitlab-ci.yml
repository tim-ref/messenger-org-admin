stages:
  - setup
  - test
  - build
  - deploy
  - smoke-test
  - deploy-ru
  - smoke-test-ru

default:
  tags:
    - eu

env-project-version:
  stage: setup
  image: registry-dockerhub.au.timref.akquinet.nx2.dev/node:18
  cache:
    paths:
      - node_modules/
  script:
    - echo "PROJECT_VERSION=$(node -p "require('./package.json').version")" > project-version
  artifacts:
    paths:
      - coverage/
    reports:
      dotenv:
        - project-version

test:
  stage: test
  image: registry-dockerhub.au.timref.akquinet.nx2.dev/node:18
  cache:
    paths:
      - node_modules/
  artifacts:
    paths:
      - coverage/
  script:
    - rm -rf cache
    - rm -rf .cypress_cache
    - yarn install --frozen-lockfile
    - yarn test --watchAll=false --coverage
    - yarn build

sonarqube-check:
  stage: test
  image:
    name: registry-dockerhub.au.timref.akquinet.nx2.dev/sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - sonar-scanner
  allow_failure: true
  needs:
    - test

e2e:
  stage: test
  image: registry-dockerhub.au.timref.akquinet.nx2.dev/cypress/browsers:node-18.16.0-chrome-113.0.5672.92-1-ff-113.0-edge-113.0.1774.35-1
  variables:
    CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/.cypress_cache"
  cache:
    paths:
      - .cypress_cache
      - node_modules/
      - e2e/node_modules
  artifacts:
    when: always
    paths:
      - e2e/cypress/screenshots
      - e2e/cypress/videos
  script:
    - yarn install
    - yarn e2e

build:
  needs:
    - job: env-project-version
  stage: build
  image:
    name: registry-gcr.au.timref.akquinet.nx2.dev/kaniko-project/executor:v1.9.0-debug
    entrypoint: [ "" ]
  script:
    - echo $CI_REGISTRY_IMAGE
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/"
      --cache=true
      --cache-copy-layers=true
      --cache-run-layers=true
      --cache-ttl=48h
      --skip-unused-stages=true
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/org-admin-client:latest"
      --destination "${CI_REGISTRY_IMAGE}/org-admin-client:${PROJECT_VERSION}"
      --build-arg "REACT_APP_VERSION='${PROJECT_VERSION}'"
      --build-arg "REACT_APP_COMMIT_SHA='${CI_COMMIT_SHORT_SHA}'"

helm-test:
  stage: test
  image: registry-dockerhub.au.timref.akquinet.nx2.dev/alpine/helm:3.10.2
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-deploy-org-admin-client
  script:
    - cd charts/org-admin-client
    - helm template --debug --set image.tag=$CI_COMMIT_SHORT_SHA .
    - helm install --dry-run --debug --namespace org-admin-client --set image.tag=$CI_COMMIT_SHORT_SHA org-admin-client .

##################
### Deploys EU ###
##################
deploy-eu:
  stage: deploy
  image: registry-dockerhub.au.timref.akquinet.nx2.dev/alpine/helm:3.10.2
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-deploy-org-admin-client
  script:
    - cd charts/org-admin-client
    - helm upgrade 
      --install org-admin-client 
      --namespace org-admin-client 
      --set image.tag=$CI_COMMIT_SHORT_SHA 
      --values ./charts/org-admin-client/eu.yaml
  only:
    - develop

smoke-test-eu:
  stage: smoke-test
  image:
    name: registry-dockerhub.au.timref.akquinet.nx2.dev/curlimages/curl:7.87.0
    entrypoint: [ "" ]
  script:
    - curl -v --fail https://org-admin-client.eu.timref.akquinet.nx2.dev
    - echo "Checking if correct version is deployed"
    - curl -s --fail https://org-admin-client.eu.timref.akquinet.nx2.dev | grep "$CI_COMMIT_SHORT_SHA"
  only:
    - develop

##################
### Deploys TU ###
##################
deploy-tu:
  stage: deploy
  tags:
    - tu
  image: registry-dockerhub.au.timref.akquinet.nx2.dev/alpine/helm:3.10.2
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-deploy-org-admin-client
  script:
    - cd charts/org-admin-client
    - helm upgrade 
      --install org-admin-client 
      --namespace org-admin-client 
      --set image.tag=$CI_COMMIT_SHORT_SHA 
      --values ./charts/org-admin-client/tu.yaml
  only:
    - develop

smoke-test-tu:
  stage: smoke-test
  image:
    name: registry-dockerhub.au.timref.akquinet.nx2.dev/curlimages/curl:7.87.0
    entrypoint: [ "" ]
  tags:
    - tu
  script:
    - curl -v --fail https://org-admin-client.tu.timref.akquinet.nx2.dev
    - echo "Checking if correct version is deployed"
    - curl -s --fail https://org-admin-client.tu.timref.akquinet.nx2.dev | grep "$CI_COMMIT_SHORT_SHA"
  only:
    - develop

##################
### Deploys RU ###
##################
deploy-ru:
  stage: deploy-ru
  tags:
    - ru
  image: registry-dockerhub.au.timref.akquinet.nx2.dev/alpine/helm:3.10.2
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-deploy-org-admin-client
  script:
    - cd charts/org-admin-client
    - helm upgrade 
      --install org-admin-client 
      --namespace org-admin-client 
      --set image.tag=$CI_COMMIT_SHORT_SHA 
      --values ./charts/org-admin-client/ru.yaml
  only:
    - develop
  when: manual

smoke-test-ru:
  stage: smoke-test-ru
  image:
    name: registry-dockerhub.au.timref.akquinet.nx2.dev/curlimages/curl:7.87.0
    entrypoint: [ "" ]
  tags:
    - ru
  script:
    - curl -v --fail https://org-admin-client.ru.timref.akquinet.nx2.dev
    - echo "Checking if correct version is deployed"
    - curl -s --fail https://org-admin-client.ru.timref.akquinet.nx2.dev | grep "$CI_COMMIT_SHORT_SHA"
  only:
    - develop
  needs:
    - deploy-ru
